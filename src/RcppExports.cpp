// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// row_d
NumericVector row_d(NumericVector x, int rnaseq);
RcppExport SEXP _testSctpa_row_d(SEXP xSEXP, SEXP rnaseqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type rnaseq(rnaseqSEXP);
    rcpp_result_gen = Rcpp::wrap(row_d(x, rnaseq));
    return rcpp_result_gen;
END_RCPP
}
// matrix_d
NumericMatrix matrix_d(NumericMatrix expr, int rnaseq);
RcppExport SEXP _testSctpa_matrix_d(SEXP exprSEXP, SEXP rnaseqSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type expr(exprSEXP);
    Rcpp::traits::input_parameter< int >::type rnaseq(rnaseqSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_d(expr, rnaseq));
    return rcpp_result_gen;
END_RCPP
}
// ks_matrix_gsva
NumericVector ks_matrix_gsva(IntegerVector geneset_idxs, IntegerMatrix expr, IntegerMatrix sort_idxs, double tau, int mx_diff, int abs_rnk);
RcppExport SEXP _testSctpa_ks_matrix_gsva(SEXP geneset_idxsSEXP, SEXP exprSEXP, SEXP sort_idxsSEXP, SEXP tauSEXP, SEXP mx_diffSEXP, SEXP abs_rnkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type geneset_idxs(geneset_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type expr(exprSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type sort_idxs(sort_idxsSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type mx_diff(mx_diffSEXP);
    Rcpp::traits::input_parameter< int >::type abs_rnk(abs_rnkSEXP);
    rcpp_result_gen = Rcpp::wrap(ks_matrix_gsva(geneset_idxs, expr, sort_idxs, tau, mx_diff, abs_rnk));
    return rcpp_result_gen;
END_RCPP
}
// ks_sample_ssgsea
double ks_sample_ssgsea(IntegerVector x, IntegerVector x_sort_indxs, IntegerVector geneset_idxs, IntegerVector geneset_mask, int n_genes, int n_geneset, double dec, double tau);
RcppExport SEXP _testSctpa_ks_sample_ssgsea(SEXP xSEXP, SEXP x_sort_indxsSEXP, SEXP geneset_idxsSEXP, SEXP geneset_maskSEXP, SEXP n_genesSEXP, SEXP n_genesetSEXP, SEXP decSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type x_sort_indxs(x_sort_indxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type geneset_idxs(geneset_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type geneset_mask(geneset_maskSEXP);
    Rcpp::traits::input_parameter< int >::type n_genes(n_genesSEXP);
    Rcpp::traits::input_parameter< int >::type n_geneset(n_genesetSEXP);
    Rcpp::traits::input_parameter< double >::type dec(decSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ks_sample_ssgsea(x, x_sort_indxs, geneset_idxs, geneset_mask, n_genes, n_geneset, dec, tau));
    return rcpp_result_gen;
END_RCPP
}
// ks_matrix_ssgsea
NumericVector ks_matrix_ssgsea(IntegerVector geneset_idxs, IntegerMatrix expr, IntegerMatrix sort_idxs, double tau);
RcppExport SEXP _testSctpa_ks_matrix_ssgsea(SEXP geneset_idxsSEXP, SEXP exprSEXP, SEXP sort_idxsSEXP, SEXP tauSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type geneset_idxs(geneset_idxsSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type expr(exprSEXP);
    Rcpp::traits::input_parameter< IntegerMatrix >::type sort_idxs(sort_idxsSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    rcpp_result_gen = Rcpp::wrap(ks_matrix_ssgsea(geneset_idxs, expr, sort_idxs, tau));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _testSctpa_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_testSctpa_row_d", (DL_FUNC) &_testSctpa_row_d, 2},
    {"_testSctpa_matrix_d", (DL_FUNC) &_testSctpa_matrix_d, 2},
    {"_testSctpa_ks_matrix_gsva", (DL_FUNC) &_testSctpa_ks_matrix_gsva, 6},
    {"_testSctpa_ks_sample_ssgsea", (DL_FUNC) &_testSctpa_ks_sample_ssgsea, 8},
    {"_testSctpa_ks_matrix_ssgsea", (DL_FUNC) &_testSctpa_ks_matrix_ssgsea, 4},
    {"_testSctpa_rcpp_hello_world", (DL_FUNC) &_testSctpa_rcpp_hello_world, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_testSctpa(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
